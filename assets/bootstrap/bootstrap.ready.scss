


//$orange: #fc754c;
//$secondary_orange: #ef653b;
//$black_text: #383d3e;
//$light_gray: #ecf0f1;
//$dark_gray: #383d3e;
////
////
////
//$font-family-sans-serif : "Source Sans Pro","Helvetica Neue","Helvetica",Helvetica,Arial,sans-serif;
//$font-size-base: 18px;
//$headings-font-weight: 200;
//$brand-primary: $orange;
//$btn-font-weight: 200;
////
////
////
$modal-content-bg: $light_gray;//Boostrap variables

$font-size-base: 14px;

$line-height-base: 1.6;

$headings-line-height:    1.3;
// Core variables and mixins
@import "bootstrap/variables";
@import "bootstrap/mixins";

// Reset and dependencies
@import "bootstrap/normalize";
@import "bootstrap/print";
@import "bootstrap/glyphicons";

// Core CSS
@import "bootstrap/scaffolding";
@import "bootstrap/type";
@import "bootstrap/code";
@import "bootstrap/grid";
@import "bootstrap/tables";
@import "bootstrap/forms";
@import "bootstrap/buttons";

// Components
@import "bootstrap/component-animations";
@import "bootstrap/dropdowns";
@import "bootstrap/button-groups";
@import "bootstrap/input-groups";
@import "bootstrap/navs";
@import "bootstrap/navbar";
@import "bootstrap/breadcrumbs";
@import "bootstrap/pagination";
@import "bootstrap/pager";
@import "bootstrap/labels";
@import "bootstrap/badges";
@import "bootstrap/jumbotron";
@import "bootstrap/thumbnails";
@import "bootstrap/alerts";
@import "bootstrap/progress-bars";
@import "bootstrap/media";
@import "bootstrap/list-group";
@import "bootstrap/panels";
@import "bootstrap/responsive-embed";
@import "bootstrap/wells";
@import "bootstrap/close";

// Components w/ JavaScript
@import "bootstrap/modals";
@import "bootstrap/tooltip";
@import "bootstrap/popovers";
@import "bootstrap/carousel";

// Utility classes
@import "bootstrap/utilities";
@import "bootstrap/responsive-utilities";// SCSS Code appened to bootstrap






/*Add breakpoint bootstrap 480px*/


$ContainerPhone: 460px;
$screen-is: 480px;
$screen-is-min : $screen-is;
$screen-is-max : ($screen-sm-min - 1); /*767px*/

$screen-xs-max:   ($screen-is-min - 1);

$screen-sm-min: ($screen-is-max +1);

.container {
  @include container-fixed;

  @media (min-width: $screen-sm-min) {
    width: inherit;
  }
  @media (min-width: $screen-md-min) {
    width: inherit;
  }
  @media (min-width: $screen-lg-min) {
    width: $container-lg;
  }
}


//Init small grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max){
  @include make-grid(is);
}

//Add visibility "visible-is" class for the custom grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max){
  @include responsive-visibility('.visible-is');
}

// Add hidden "hidden-is" class for the custom grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max) {
  @include responsive-invisibility('.hidden-is');
}

// Define the "visible-is" class as hidden in all other grid widths (Except in the custom grid).
@media (min-width: $screen-sm-min) {
  @include responsive-invisibility('.visible-is');
}

@media (max-width: $screen-xs-max) {
  @include responsive-invisibility('.visible-is');
}